@inject IWeatherViewModel ViewModel 
@implements IDisposable

@if (this.Model != null)
{
    <MudGrid Class="mb-2">
        <MudItem xs="12" sm="6" md="3" Style="min-width:380px">
            <MudContainer Class="d-flex align-center justify-content-center gap-2" Style="height:110px;">
                <MudImage Src="@this.Model?.Image"></MudImage>            
                <MudText Typo="Typo.h5" Align="Align.Left">@this.Model?.WeatherText</MudText>
            </MudContainer>
        </MudItem> 
        <MudItem xs="12" sm="6" md="3" Style="min-width:380px">
            <MudContainer Class="d-flex align-center justify-content-center" Style="height:110px;">
                <MudIcon Icon="@Icons.Material.Filled.Thermostat" Class="mx-2" Color="Color.Primary" Style="width:54px; height:54px;"></MudIcon>
                <div class="d-flex flex-row align-items-center ml-6">
                    <MudText Typo="Typo.h4">@this.Model?.Temperature</MudText>
                    <MudText Typo="Typo.h5" Class="mx-2">°C</MudText>
                </div>
            </MudContainer>
        </MudItem>
        <MudItem xs="12" sm="6" md="3" Style="min-width:380px">
            <MudContainer Class="d-flex align-center justify-content-center" Style="height:110px;">
                @if ((this.Model.WindDirection >= 22) && (this.Model.WindDirection < 67))
                {
                    <MudIcon Class="mx-2" Icon="@Icons.Material.Filled.NorthEast" Color="Color.Primary" Style="width:54px; height:54px;"></MudIcon>
                }
                else if ((this.Model.WindDirection >= 67) && (this.Model.WindDirection < 112))
                {
                    <MudIcon Class="mx-2" Icon="@Icons.Material.Filled.East" Color="Color.Primary" Style="width:54px; height:54px;"></MudIcon>
                }
                else if ((this.Model.WindDirection >= 112) && (this.Model.WindDirection < 157))
                {
                    <MudIcon Class="mx-2" Icon="@Icons.Material.Filled.SouthEast" Color="Color.Primary" Style="width:54px; height:54px;"></MudIcon>
                }
                else if ((this.Model.WindDirection >= 157) && (this.Model.WindDirection < 202))
                {
                    <MudIcon Class="mx-2" Icon="@Icons.Material.Filled.South" Color="Color.Primary" Style="width:54px; height:54px;"></MudIcon>
                }
                else if ((this.Model.WindDirection >= 202) && (this.Model.WindDirection < 247))
                {
                    <MudIcon Class="mx-2" Icon="@Icons.Material.Filled.SouthWest" Color="Color.Primary" Style="width:54px; height:54px;"></MudIcon>
                }
                else if ((this.Model.WindDirection >= 247) && (this.Model.WindDirection < 292))
                {
                    <MudIcon Class="mx-2" Icon="@Icons.Material.Filled.West" Color="Color.Primary" Style="width:54px; height:54px;"></MudIcon>
                }
                else if ((this.Model.WindDirection >= 292) && (this.Model.WindDirection < 337))
                {
                    <MudIcon Class="mx-2" Icon="@Icons.Material.Filled.NorthWest" Color="Color.Primary" Style="width:54px; height:54px;"></MudIcon>
                }
                else 
                {
                    <MudIcon Class="mx-2" Icon="@Icons.Material.Filled.North" Color="Color.Primary" Style="width:54px; height:54px;"></MudIcon>
                }

                <MudText Typo="Typo.h4" Class="ml-4">@this.Model?.WindSpeed</MudText>
                <MudText Typo="Typo.h5" Align="Align.Left" Class="mx-2">km/h</MudText>
            </MudContainer>
        </MudItem>
        <MudItem xs="12" sm="6" md="3" Style="min-width:380px">
            <MudContainer Class="d-flex align-center justify-content-center" Style="height:110px;">
                <MudText Typo="Typo.h4" Color="Color.Primary" Style="font-weight:bold" Class="ml-4">P</MudText>
                <MudText Typo="Typo.h4" Class="ml-4">@this.Model?.Pressure</MudText>
                <MudText Typo="Typo.h5" Align="Align.Left" Class="mx-2">hPa</MudText>
            </MudContainer>
        </MudItem>
    </MudGrid>
}

@code 
{
    [Parameter]
    public LocationModel Location { get; set; } = null;

    public WeatherModel Model { get; set; } = null;

    protected override async Task OnInitializedAsync()
    {
        if (this.ViewModel != null)
        {
            await this.ViewModel.InitializeAsync(null);
        }
    }

    protected override async Task OnParametersSetAsync()
    {
        if ((this.ViewModel != null) && (this.Location != null) && (this.Location.Location != null))
        {
            this.Model = await this.ViewModel.GetWeatherModel(this.Location);
            if (this.Model != null)
            {
                this.ViewModel.Refresh += RefreshView;
            }
        }
    }

    public void Dispose()
    {
        if (this.ViewModel != null)
        {
            this.ViewModel.Refresh -= RefreshView;
            this.ViewModel?.Dispose();
            this.ViewModel = null;
        }
    }

    public void RefreshView(object sender, EventArgs e)
    {
        this.StateHasChanged();
    }
}
