@inject IStringLocalizer<Resource> Localizer
@implements IDisposable

<MudGrid Class="mb-4 mt-5" Style="align-items: center;">
    <MudItem xs="12" sm="6" md="3" Style="min-width:400px">
        <MudPaper Class="d-flex align-center gap-4" Style="height:90px;">
            <MudDatePicker Label="@Localizer["StartDate"]" Editable="true" MinDate="@MinDate" MaxDate="@MaxDate" @bind-Date="StartDate" Placeholder="@Localizer["SelectDate"]" Class="mx-10" />
        </MudPaper>
    </MudItem>
    <MudItem xs="12" sm="6" md="3" Style="min-width:400px">
        <MudPaper Class="d-flex align-center gap-4" Style="height:90px;">
            <MudDatePicker Label="@Localizer["EndDate"]" Editable="true" MinDate="@MinDate" MaxDate="@MaxDate" @bind-Date="EndDate" Placeholder="@Localizer["SelectDate"]" Class="mx-10" />
        </MudPaper>
    </MudItem>
    <MudItem xs="12" sm="6" md="3" Style="min-width:400px" Class="ml-6">
        <MudButton Variant="Variant.Filled" OnClick=@SelectDatesClick Color="MudBlazor.Color.Primary">@Localizer["DisplayCharts"]</MudButton>
    </MudItem>
</MudGrid>

@code
{
    [Parameter]
    public string RoomId { get; set; } = string.Empty;

    [Parameter]
    public DateTime? StartDate { get; set; } = DateTime.Today;

    [Parameter]
    public DateTime? EndDate { get; set; } = DateTime.Today;

    [Parameter]
    public DateTime? MaxDate { get; set; }

    [Parameter]
    public DateTime? MinDate { get; set; }

    [Parameter]
    public EventCallback<DateTime?> StartDateChanged { get; set; }

    [Parameter]
    public EventCallback<DateTime?> EndDateChanged { get; set; }

    public void Dispose()
    {
    }
    public async Task SelectDatesClick()
    {
        await this.StartDateChanged.InvokeAsync(this.StartDate);
        await this.EndDateChanged.InvokeAsync(this.EndDate);
    }
}
