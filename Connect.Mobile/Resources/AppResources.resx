<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AppName" xml:space="preserve">
    <value>ScanSite</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="UserId" xml:space="preserve">
    <value>User Id</value>
  </data>
  <data name="Torch" xml:space="preserve">
    <value>Torch</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Validate" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="Connection" xml:space="preserve">
    <value>Connection</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="Version" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="Number" xml:space="preserve">
    <value>Number</value>
  </data>
  <data name="NumberCsv" xml:space="preserve">
    <value>Number</value>
  </data>
  <data name="Synchronized" xml:space="preserve">
    <value>Synchronized</value>
  </data>
  <data name="NotSynchronizedNotAdded" xml:space="preserve">
    <value>Not synchronized and not added</value>
  </data>
  <data name="Waiting" xml:space="preserve">
    <value>Waiting</value>
  </data>
  <data name="NotSynchronized" xml:space="preserve">
    <value>Not synchronized</value>
  </data>
  <data name="ElementNotSynchronized" xml:space="preserve">
    <value>Non-synchronized element</value>
  </data>
  <data name="IsDeleted" xml:space="preserve">
    <value>Deleted</value>
  </data>
  <data name="Server" xml:space="preserve">
    <value>Server</value>
  </data>
  <data name="Local" xml:space="preserve">
    <value>Local</value>
  </data>
  <data name="DeliveredQty" xml:space="preserve">
    <value>Delivered amount</value>
  </data>
  <data name="DeliveryDate" xml:space="preserve">
    <value>Delivery date</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="CreationDate" xml:space="preserve">
    <value>Creation date</value>
  </data>
  <data name="CreationDateCsv" xml:space="preserve">
    <value>Creation date</value>
  </data>
  <data name="UpdateDate" xml:space="preserve">
    <value>Last update date</value>
  </data>
  <data name="DeleteDate" xml:space="preserve">
    <value>Removal date</value>
  </data>
  <data name="AlreadyBreakdowned" xml:space="preserve">
    <value>Broken down amount</value>
  </data>
  <data name="AlreadyBreakdownedCsv" xml:space="preserve">
    <value>Broken down amount</value>
  </data>
  <data name="RemainingQty" xml:space="preserve">
    <value>Remaining to break down</value>
  </data>
  <data name="SelectBuilding" xml:space="preserve">
    <value>Select a building</value>
  </data>
  <data name="SelectLevel" xml:space="preserve">
    <value>Select a level</value>
  </data>
  <data name="SelectPosition" xml:space="preserve">
    <value>Select a position</value>
  </data>
  <data name="Affair" xml:space="preserve">
    <value>Affair</value>
  </data>
  <data name="AffairId" xml:space="preserve">
    <value>Affair Id</value>
  </data>
  <data name="KeepValue" xml:space="preserve">
    <value>Do you want to keep the local value ?</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="Building" xml:space="preserve">
    <value>Building</value>
  </data>
  <data name="BuildingCsv" xml:space="preserve">
    <value>Building</value>
  </data>
  <data name="Level" xml:space="preserve">
    <value>Level</value>
  </data>
  <data name="Position" xml:space="preserve">
    <value>Position</value>
  </data>
  <data name="Quantity" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="QuantityCsv" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="BuildingCode" xml:space="preserve">
    <value>Building code</value>
  </data>
  <data name="DeliveryForm" xml:space="preserve">
    <value>Delivery form</value>
  </data>
  <data name="DeliveryFormLC" xml:space="preserve">
    <value>delivery form</value>
  </data>
  <data name="DeliveryFormList" xml:space="preserve">
    <value>Forms list</value>
  </data>
  <data name="DeliveryFormListButton" xml:space="preserve">
    <value>Delivery forms list</value>
  </data>
  <data name="Breakdown" xml:space="preserve">
    <value>Breakdown</value>
  </data>
  <data name="BreakdownList" xml:space="preserve">
    <value>Breakdowns list</value>
  </data>
  <data name="About" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="AlreadyScanned" xml:space="preserve">
    <value>It has already been scanned.</value>
  </data>
  <data name="AtDate" xml:space="preserve">
    <value>at the date</value>
  </data>
  <data name="ExportCsvProject" xml:space="preserve">
    <value>Export Csv of the project</value>
  </data>
  <data name="Central" xml:space="preserve">
    <value>Central</value>
  </data>
  <data name="VolumeOrdered" xml:space="preserve">
    <value>Ordered volume</value>
  </data>
  <data name="VolumeDelivered" xml:space="preserve">
    <value>Delivered volume</value>
  </data>
  <data name="VolumeOrderedCsv" xml:space="preserve">
    <value>Ordered volume</value>
  </data>
  <data name="VolumeDeliveredCsv" xml:space="preserve">
    <value>Delivered volume</value>
  </data>
  <data name="Formula" xml:space="preserve">
    <value>Formula</value>
  </data>
  <data name="Customer" xml:space="preserve">
    <value>Customer</value>
  </data>
  <data name="Supplement" xml:space="preserve">
    <value>Supplement</value>
  </data>
  <data name="QuantitySupplement" xml:space="preserve">
    <value>Extra charge</value>
  </data>
  <data name="SupplementCsv" xml:space="preserve">
    <value>Supplement</value>
  </data>
  <data name="QuantitySupplementCsv" xml:space="preserve">
    <value>Extra charge</value>
  </data>
  <data name="Designation" xml:space="preserve">
    <value>Designation</value>
  </data>
  <data name="DesignationCsv" xml:space="preserve">
    <value>Designation</value>
  </data>
  <data name="ExposureClass" xml:space="preserve">
    <value>Exposure class</value>
  </data>
  <data name="Consistency" xml:space="preserve">
    <value>Consistency</value>
  </data>
  <data name="Resilience" xml:space="preserve">
    <value>Resilience</value>
  </data>
  <data name="ResilienceCsv" xml:space="preserve">
    <value>Resilience</value>
  </data>
  <data name="ConcreteType" xml:space="preserve">
    <value>Type of concrete</value>
  </data>
  <data name="Concrete" xml:space="preserve">
    <value>Concrete</value>
  </data>
  <data name="Adjuvant" xml:space="preserve">
    <value>Adjuvant</value>
  </data>
  <data name="Certification" xml:space="preserve">
    <value>Certification</value>
  </data>
  <data name="EffectivenessBinder" xml:space="preserve">
    <value>Effectiveness binder</value>
  </data>
  <data name="Granularity" xml:space="preserve">
    <value>Granularity</value>
  </data>
  <data name="GranularityCsv" xml:space="preserve">
    <value>Granularity</value>
  </data>
  <data name="Dosage" xml:space="preserve">
    <value>Dosage</value>
  </data>
  <data name="ChlorureClass" xml:space="preserve">
    <value>Chlorure class</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="StartScan" xml:space="preserve">
    <value>Select the data matrix to start to scan a </value>
  </data>
  <data name="ConflictSynchro" xml:space="preserve">
    <value>Synchronization conflict</value>
  </data>
  <data name="ConfirmRemove" xml:space="preserve">
    <value>Do you confirm to delete the element </value>
  </data>
  <data name="Menu" xml:space="preserve">
    <value>Menu</value>
  </data>
  <data name="ErrorLaunchingScan" xml:space="preserve">
    <value>Unable to launch the scan</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="Warning" xml:space="preserve">
    <value>Warning</value>
  </data>
  <data name="NoElement" xml:space="preserve">
    <value>No connected object configured</value>
  </data>
  <data name="ErrorMail" xml:space="preserve">
    <value>Unable to send the email</value>
  </data>
  <data name="NotConnected" xml:space="preserve">
    <value>Not connected</value>
  </data>
  <data name="ErrorServer" xml:space="preserve">
    <value>The server doesn't answer</value>
  </data>
  <data name="ErrorCompleteTask" xml:space="preserve">
    <value>Unable to complete the task</value>
  </data>
  <data name="ErrorDataMatrixFormat" xml:space="preserve">
    <value>The data matric format is not correct.</value>
  </data>
  <data name="PROJECT_NOT_FOUND" xml:space="preserve">
    <value>Unable to find the project</value>
  </data>
  <data name="ErrorLoadingProject" xml:space="preserve">
    <value>Unable to load the projects</value>
  </data>
  <data name="ErrorSavingProject" xml:space="preserve">
    <value>Unable to save the project</value>
  </data>
  <data name="ErrorDispatch" xml:space="preserve">
    <value>Incorrect breakdown</value>
  </data>
  <data name="ErroprDispatchInconsistency" xml:space="preserve">
    <value>The broken down quantity is inconsistent with the value of the server.</value>
  </data>
  <data name="ErrorPositionInconsistency" xml:space="preserve">
    <value>The position is inconsistent with the value of the server.</value>
  </data>
  <data name="ErrorLoadingDispatch" xml:space="preserve">
    <value>Unable to load the breakdowns</value>
  </data>
  <data name="ErrorAddEditDispatch" xml:space="preserve">
    <value>Unable to add or edit the breakdown</value>
  </data>
  <data name="ErrorDecimalValue" xml:space="preserve">
    <value>The amount must be an integer value.</value>
  </data>
  <data name="ErrorNegativeValue" xml:space="preserve">
    <value>The remaining amount can not be negative.</value>
  </data>
  <data name="ErrorIncorrectValue" xml:space="preserve">
    <value>The amount is not valid.</value>
  </data>
  <data name="ErrorZeroValue" xml:space="preserve">
    <value>The amount can not be zero.</value>
  </data>
  <data name="DayCannotBeNull" xml:space="preserve">
    <value>The day must be completed</value>
  </data>
  <data name="TimeCannotBeNull" xml:space="preserve">
    <value>The time must be completed</value>
  </data>
  <data name="StartEndTime" xml:space="preserve">
    <value>The end time must be greater than the start time</value>
  </data>
  <data name="BONBETON_VENTILATION_POSITON_ALREADY_EXIST" xml:space="preserve">
    <value>This position is already broken down.</value>
  </data>
  <data name="ErrorOperationRange" xml:space="preserve">
    <value>Error with the operation range</value>
  </data>
  <data name="ErrorNotification" xml:space="preserve">
    <value>Error with the notification </value>
  </data>
  <data name="OverlapingRange" xml:space="preserve">
    <value>It overlaps an existing range.</value>
  </data>
  <data name="ErrorEmptyPosition" xml:space="preserve">
    <value>You must select a position.</value>
  </data>
  <data name="BONBETON_BREAKDOWN_NOTFOUND" xml:space="preserve">
    <value>The breakdown corresponding is unknown</value>
  </data>
  <data name="BONBETON_NOTFOUND" xml:space="preserve">
    <value>Unable to load the delivery form</value>
  </data>
  <data name="ErrorLoadingDeliveryForm" xml:space="preserve">
    <value>Unable to load the delivery forms</value>
  </data>
  <data name="ErrorSelectingDeliveryForm" xml:space="preserve">
    <value>Unable to select the delivery form</value>
  </data>
  <data name="ErrorSynchronizingDeliveryForm" xml:space="preserve">
    <value>Unable to synchronize the delivery forms</value>
  </data>
  <data name="ErrorDeletingDeliveryForm" xml:space="preserve">
    <value>Unable to delete the delivery form</value>
  </data>
  <data name="ErrorAddingDeliveryForm" xml:space="preserve">
    <value>Unable to add the delivery form</value>
  </data>
  <data name="BONBETON_ALREADY_EXIST" xml:space="preserve">
    <value>Unable to add the delivery form. It already exists.</value>
  </data>
  <data name="ErrorExportingDeliveryForm" xml:space="preserve">
    <value>Unable to export the delivery forms</value>
  </data>
  <data name="BONBETON_BREAKDOWN_NO_REMAINING_QUANTITY" xml:space="preserve">
    <value>The broken down amount for the delivery form is greater than the delivered amount.</value>
  </data>
  <data name="Off" xml:space="preserve">
    <value>Off</value>
  </data>
  <data name="On" xml:space="preserve">
    <value>On</value>
  </data>
  <data name="Programming" xml:space="preserve">
    <value>Programming</value>
  </data>
  <data name="EndDate" xml:space="preserve">
    <value>EndDate</value>
  </data>
  <data name="Humidity" xml:space="preserve">
    <value>Humidity</value>
  </data>
  <data name="Pressure" xml:space="preserve">
    <value>Pressure</value>
  </data>
  <data name="StartDate" xml:space="preserve">
    <value>StartDate</value>
  </data>
  <data name="Temperature" xml:space="preserve">
    <value>Temperature</value>
  </data>
  <data name="OpenProgramming" xml:space="preserve">
    <value>Would you like to program your connected object</value>
  </data>
  <data name="DeleteOperationRange" xml:space="preserve">
    <value>Are you sure to remove the operation range ? </value>
  </data>
  <data name="DeleteOperationRanges" xml:space="preserve">
    <value>Are you sure to remove the operation ranges ? </value>
  </data>
  <data name="Question" xml:space="preserve">
    <value>Question</value>
  </data>
  <data name="OperatingRange" xml:space="preserve">
    <value>Operating Range</value>
  </data>
  <data name="Schedule" xml:space="preserve">
    <value>Schedule</value>
  </data>
  <data name="Day" xml:space="preserve">
    <value>Day</value>
  </data>
  <data name="Weekend" xml:space="preserve">
    <value>Weekend</value>
  </data>
  <data name="AllDay" xml:space="preserve">
    <value>All day</value>
  </data>
  <data name="Conditions" xml:space="preserve">
    <value>Conditions</value>
  </data>
  <data name="Week" xml:space="preserve">
    <value>Week</value>
  </data>
  <data name="Manual" xml:space="preserve">
    <value>Manual</value>
  </data>
  <data name="Hour" xml:space="preserve">
    <value>Hour</value>
  </data>
  <data name="SelectDay" xml:space="preserve">
    <value>Select the day</value>
  </data>
  <data name="SelectHour" xml:space="preserve">
    <value>Select the hour</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="DeleteAll" xml:space="preserve">
    <value>Delete All</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="AddRange" xml:space="preserve">
    <value>Add a new range</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="EditNotification" xml:space="preserve">
    <value>Edit a notification</value>
  </data>
  <data name="NoNotification" xml:space="preserve">
    <value>No notification set</value>
  </data>
  <data name="AddNotification" xml:space="preserve">
    <value>Add a new notification</value>
  </data>
  <data name="DeleteNotifications" xml:space="preserve">
    <value>Are you sure to remove the notifications ?</value>
  </data>
  <data name="OFF_Upper" xml:space="preserve">
    <value>OFF</value>
  </data>
  <data name="ON_Upper" xml:space="preserve">
    <value>ON</value>
  </data>
  <data name="Authentication" xml:space="preserve">
    <value>Authentication</value>
  </data>
  <data name="InvalidCredentialsEntered" xml:space="preserve">
    <value>Invalid credentials entered</value>
  </data>
  <data name="Username" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="ErrorAuthentication" xml:space="preserve">
    <value>Unable to be authenticated</value>
  </data>
</root>