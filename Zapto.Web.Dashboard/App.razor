@using System.Reflection
@using Microsoft.AspNetCore.Components.Routing
@using Microsoft.AspNetCore.Components.WebAssembly.Services
@inject LazyAssemblyLoader AssemblyLoader
@inject IStringLocalizer<Resource> Localizer
    
<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(App).Assembly"
            AdditionalAssemblies="@LazyLoadedAssemblies"
            OnNavigateAsync="@OnNavigateAsync">
        <Navigating>
        </Navigating>
        <Found Context="routeData">
            <AuthorizeRouteView Resource="@routeData" RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                <Authorizing>
                    <p>@Localizer["Determining session state, please wait..."]</p>
                </Authorizing>
                <NotAuthorized>
                    <p>@Localizer["You're not authorized to reach this page. You need to log in."]</p>
                </NotAuthorized>
            </AuthorizeRouteView>
        </Found>
        <NotFound>
            <PageTitle>@Localizer["Not found"]</PageTitle>
            <LayoutView Layout="@typeof(MainLayout)">
                <p role="alert">@Localizer["Sorry, there's nothing at this address."]</p>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>


@code 
{
    private List<Assembly> LazyLoadedAssemblies { get; set; } = new();

    private async Task OnNavigateAsync(NavigationContext args)
    {
        if (args.Path.Contains("dashboard"))
        {
            var assemblies = await AssemblyLoader.LoadAssembliesAsync(new[] {"Zapto.Component.Dashboard.wasm"});
            this.LazyLoadedAssemblies.AddRange(assemblies);
        }
        else if (args.Path.Contains("healthcheck"))
        {
            var assemblies = await AssemblyLoader.LoadAssembliesAsync(new[] { "Zapto.Component.Healthcheck.wasm" });
            this.LazyLoadedAssemblies.AddRange(assemblies);
        }
        else if (args.Path.Contains("roomchartlist"))
        {
            var assemblies = await AssemblyLoader.LoadAssembliesAsync(new[] { "Zapto.Component.Charts.wasm" });
            this.LazyLoadedAssemblies.AddRange(assemblies);
        }
        else if (args.Path.Contains("airpollutiondetails"))
        {
            var assemblies = await AssemblyLoader.LoadAssembliesAsync(new[] { "Zapto.Component.AirPollution.wasm" });
            this.LazyLoadedAssemblies.AddRange(assemblies);
        }
    }
}