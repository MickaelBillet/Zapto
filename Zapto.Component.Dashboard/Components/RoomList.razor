@inject IRoomListViewModel? ViewModel
@inject ISnackbar Snackbar
@implements IDisposable

<MudGrid Class="mb-2">
    @if (this.Rooms != null)
    {
        @foreach(var room in this.Rooms)
        {
            <Room Model="@room"></Room>
        }
    }
</MudGrid>

@code {
    [Parameter]
    public LocationModel? Location { get; set; } = null;

    public IEnumerable<RoomModel>? Rooms { get; set; } = null;

    protected override async Task OnInitializedAsync()
    {
        if (this.ViewModel != null)
        {
            await this.ViewModel.InitializeAsync(null);
        }
    }

    protected override async Task OnParametersSetAsync()
    {
        if ((this.ViewModel != null) && (this.Location != null))
        {
            try
            {
                this.Rooms = await this.ViewModel.GetRoomModels(this.Location.Id);
            }
            catch (Exception ex)
            {
                Snackbar.Add(ex.Message, Severity.Error);
            }
        }
    }

    public void Dispose()
    {
        if (this.ViewModel != null)
        {
            this.ViewModel?.Dispose();
            this.ViewModel = null;
        }
    }
}
