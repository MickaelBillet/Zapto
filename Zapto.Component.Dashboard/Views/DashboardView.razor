@inject IDashboardViewModel ViewModel
@inject IStringLocalizer<Resource> Localizer
@implements IDisposable

<ErrorBoundary @ref="ErrorBoundaryLocation">
    <ChildContent>
        <Location @bind-Model="@this.Location"></Location>
    </ChildContent>
    <ErrorContent>
        <MudContainer Style="height:80px;" Class="d-flex align-center gap-2">
            <MudText Typo="Typo.h6" Class="mr-4">Location @this.Localizer["HS"]</MudText>
                <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Outlined.ErrorOutline" @onclick="ResetErrorLocation" Color="Color.Warning">Reload</MudButton>
        </MudContainer>
    </ErrorContent>
</ErrorBoundary>

<ErrorBoundary @ref="ErrorBoundaryWeather">
    <ChildContent>
        <Weather></Weather>
    </ChildContent>
    <ErrorContent>
        <MudContainer Style="height:80px;" Class="d-flex align-center gap-2">
            <MudText Typo="Typo.h6" Class="mr-4">Weather @this.Localizer["HS"]</MudText>
            <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Outlined.ErrorOutline" @onclick="ResetErrorWeather" Color="Color.Warning">Reload</MudButton>
        </MudContainer>
    </ErrorContent>
</ErrorBoundary>

<ErrorBoundary @ref="ErrorBoundaryAirPollution">
    <ChildContent>
        <Pollution></Pollution>
    </ChildContent>
    <ErrorContent>
        <MudContainer Style="height:80px;" Class="d-flex align-center gap-2">
            <MudText Typo="Typo.h6" Class="mr-4">AirPollution @this.Localizer["HS"]</MudText>
            <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Outlined.ErrorOutline" @onclick="ResetErrorAirPollution" Color="Color.Warning">Reload</MudButton>
        </MudContainer>
    </ErrorContent>
</ErrorBoundary>

@* <ErrorBoundary @ref="ErrorBoundaryConnect">
    <ChildContent>
        <RoomList Location="@this.Location"></RoomList>
    </ChildContent>
    <ErrorContent>
        <MudContainer Style="height:80px;" Class="d-flex align-center gap-2">
            <MudText Typo="Typo.h6" Class="mr-4">Connect @this.Localizer["HS"]</MudText>
            <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Outlined.ErrorOutline" @onclick="ResetErrorConnect" Color="Color.Warning">Reload</MudButton>
        </MudContainer>
    </ErrorContent>
</ErrorBoundary> *@

@code 
{
    public LocationModel? Location { get; set; } 
    private ErrorBoundary? ErrorBoundaryAirPollution;
    private ErrorBoundary? ErrorBoundaryWeather;
    private ErrorBoundary? ErrorBoundaryConnect;
    private ErrorBoundary? ErrorBoundaryLocation;

    protected override async Task OnInitializedAsync()
    {
        if (this.ViewModel != null)
        {
            await this.ViewModel.InitializeAsync(null);
        }
    }

    protected override void OnParametersSet()
    {
        if ((this.ViewModel != null) && (this.Location != null))
        {
            ErrorBoundaryWeather?.Recover();
            ErrorBoundaryAirPollution?.Recover();
            ErrorBoundaryConnect?.Recover();
            ErrorBoundaryLocation?.Recover();
        }
    }

    private void ResetErrorWeather()
    {
        ErrorBoundaryWeather?.Recover();
    }

    private void ResetErrorAirPollution()
    {
        ErrorBoundaryAirPollution?.Recover();
    }

    private void ResetErrorConnect()
    {
        ErrorBoundaryConnect?.Recover();
    }

    private void ResetErrorLocation()
    {
        ErrorBoundaryLocation?.Recover();
    }

    public void Dispose()
    {
        if (this.ViewModel != null)
        {
            this.ViewModel?.Dispose();
            this.ViewModel = null;
        }
    }
}